type Post {
	id: ID!
	title: String!
	text: String!
	createdAt: DateTime!
	createdBy: User
}

type User {
	id: String!
	name: String!
}

type PostMutation {
	type: MutationType!
	post: Post!
}

enum MutationType {
	CREATED
	UPDATED
	DELETED
}

extend type Query {
	getPosts: [Post!]!
	getPost(id: ID!): [Post!]!
}

extend type Mutation {
	createPost(title: String!, text: String!): Post!
	updatePost(id: ID!, title: String!, text: String!): Post!
	deletePost(id: ID!): Post!
}

extend type Subscription {
	watchPostChanges(types: [MutationType!], oddOnly: Boolean): PostMutation!
}